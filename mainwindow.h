#ifndef MAINWINDOW_H
#define MAINWINDOW_H

#include <QMainWindow>
#include <QString>
#include <QNetworkAccessManager>
#include <QNetworkRequest>
#include <QNetworkReply>
#include <QUrl>
#include <QJsonDocument>
#include <QJsonObject>
#include <QJsonArray>


namespace Ui { class MainWindow; }

class MainWindow : public QMainWindow
{
    Q_OBJECT

public:
    explicit MainWindow(QWidget *parent = nullptr);
    ~MainWindow();

private:
    Ui::MainWindow *ui;    // Pointer to the UI class generated by Qt Designer
    QString selectedLanguage; // Tracks the currently selected language
    QNetworkAccessManager* manager = new QNetworkAccessManager(this);
    void displayWordOfTheDay(const QString& langCode, int retryCount);
    void fetchTranslation(const QString& langCode, int retryCount, int maxRetries);  // Declare the function here
    void handleTranslationReply(QNetworkReply* reply, const QString& langCode, int retryCount, int maxRetries);
    void startQuiz();                                         // Initializes the quiz
    void fetchQuizWords(int index);                           // Fetches quiz words from API
    void fetchTranslationForQuiz(const QString& word, int index, int retryCount); // Fetches translation for quiz words
    void displayQuizQuestion();                               // Displays the current quiz question
    void on_quizNextButton_clicked();        // Handles the "Next" button click in the quiz
    void clearRadioButtonSelection();
    void onEndQuizButtonClicked();
    static constexpr int QUIZ_SIZE = 5;        // Number of questions in the quiz
    int quizCurrentQuestion = 0;               // Current question index
    int quizCorrectAnswers = 0;                // Number of correct answers
    QString quizWords[QUIZ_SIZE];              // Array to store quiz words
    QString quizOptions[QUIZ_SIZE][4];         // 2D array to store 4 options per question
    QString quizCorrectAnswersArray[QUIZ_SIZE]; // Correct answers for each question
    void onFlipButtonPressed();           // Handles "Flip" button pressed
    void onFlipButtonReleased();          // Handles "Flip" button released
    void onNextFlashcardClicked();        // Handles "Next" button clicked
    void fetchFlashcards();               // Fetches all flashcards
    void fetchForeignWord(int index);     // Fetches a random foreign word
    void fetchTranslation(const QString &foreignWord, int index); // Fetches the translation for a foreign word
    void displayFlashcard();              // Displays the current flashcard
    void searchImagesOnPexels(const QString &query);
    void displayImage(const QString &imageUrl);
    QString foreignWords[5];              // Static array for foreign words
    QString englishTranslations[5];       // Static array for English translations
    int currentFlashcardIndex;            // Index of the currently displayed flashcard
};


#endif // MAINWINDOW_H

